From fae85d7d26abb28bc06d2d70223fdc827aafd988 Mon Sep 17 00:00:00 2001
From: TanyaChandnani2601 <tanya.r.chandnani@gmail.com>
Date: Wed, 24 May 2023 22:14:05 +0530
Subject: [PATCH] Modifications made to task 3

---
 .gitignore             |  2 ++
 src/DataManipulator.ts | 35 +++++++++++++++++++++++++----------
 src/Graph.tsx          | 40 ++++++++++++++++++++++++----------------
 3 files changed, 51 insertions(+), 26 deletions(-)

diff --git a/.gitignore b/.gitignore
index 4d29575..bc41f42 100755
--- a/.gitignore
+++ b/.gitignore
@@ -21,3 +21,5 @@
 npm-debug.log*
 yarn-debug.log*
 yarn-error.log*
+
+venv
diff --git a/src/DataManipulator.ts b/src/DataManipulator.ts
index 7f62295..5c03e09 100644
--- a/src/DataManipulator.ts
+++ b/src/DataManipulator.ts
@@ -1,20 +1,35 @@
 import { ServerRespond } from './DataStreamer';
 
 export interface Row {
-  stock: string,
-  top_ask_price: number,
+  price_abc: number,
+  price_def: number,
+  ratio: number,
   timestamp: Date,
+  upper_bound: number,
+  lower_bound: number,
+  trigger_alert: number | undefined,
 }
 
 
 export class DataManipulator {
-  static generateRow(serverResponds: ServerRespond[]) {
-    return serverResponds.map((el: any) => {
-      return {
-        stock: el.stock,
-        top_ask_price: el.top_ask && el.top_ask.price || 0,
-        timestamp: el.timestamp,
+  static generateRow(serverResponds: ServerRespond[]): Row {
+    const priceABC = (serverResponds[0].top_ask.price + serverResponds[0].top_bid.price) / 2;
+    const priceDEF = (serverResponds[1].top_ask.price + serverResponds[1].top_bid.price) / 2;
+    const ratio = priceABC / priceDEF;
+    const upperBound = 1 + 0.05;
+    const lowerBound = 1 - 0.05;
+    
+    return {
+      price_abc: priceABC,
+      price_def: priceDEF,
+      ratio,
+      timestamp: serverResponds[0].timestamp > serverResponds[1].timestamp ? serverResponds[0].timestamp : serverResponds[1].timestamp,
+      upper_bound: upperBound,
+      lower_bound: lowerBound,
+      trigger_alert: (ratio > upperBound || ratio < lowerBound) ? ratio : undefined,
+
+
       };
-    })
+    }
   }
-}
+
diff --git a/src/Graph.tsx b/src/Graph.tsx
index 277797d..402ff17 100644
--- a/src/Graph.tsx
+++ b/src/Graph.tsx
@@ -1,5 +1,5 @@
 import React, { Component } from 'react';
-import { Table } from '@finos/perspective';
+import { Table, TableData } from '@finos/perspective';
 import { ServerRespond } from './DataStreamer';
 import { DataManipulator } from './DataManipulator';
 import './Graph.css';
@@ -23,10 +23,13 @@ class Graph extends Component<IProps, {}> {
     const elem = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
 
     const schema = {
-      stock: 'string',
-      top_ask_price: 'float',
-      top_bid_price: 'float',
-      timestamp: 'date',
+      price_abc: "float",
+      price_def: "float",
+      ratio: "float",
+      timestamp: "date",
+      upper_bound: "float",
+      lower_bound: "float",
+      trigger_alert: "float",
     };
 
     if (window.perspective && window.perspective.worker()) {
@@ -36,23 +39,28 @@ class Graph extends Component<IProps, {}> {
       // Load the `table` in the `<perspective-viewer>` DOM reference.
       elem.load(this.table);
       elem.setAttribute('view', 'y_line');
-      elem.setAttribute('column-pivots', '["stock"]');
       elem.setAttribute('row-pivots', '["timestamp"]');
-      elem.setAttribute('columns', '["top_ask_price"]');
-      elem.setAttribute('aggregates', JSON.stringify({
-        stock: 'distinctcount',
-        top_ask_price: 'avg',
-        top_bid_price: 'avg',
-        timestamp: 'distinct count',
-      }));
+      elem.setAttribute('columns', '["ratio", "lower_bound", "upper_bound", "trigger_alert"]');
+      elem.setAttribute(
+        'aggregates',
+        JSON.stringify({
+          stock: "distinctcount",
+          price_abc: "avg",
+          price_def: "avg",
+          ratio: "avg",
+          timestamp: "distinct count",
+          upper_bound: "avg",
+          lower_bound: "avg",
+          trigger_alert: "avg",
+        })
+      );
     }
   }
 
   componentDidUpdate() {
     if (this.table) {
-      this.table.update(
-        DataManipulator.generateRow(this.props.data),
-      );
+      this.table.update([DataManipulator.generateRow(this.props.data),
+      ] as unknown as TableData);
     }
   }
 }
-- 
2.35.1.windows.2

